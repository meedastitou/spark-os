{
    "settings": {
        "model": {
            "enable": false,
            "requestFrequency": 10,
            "slaveId": 1,
            "highByteFirst": true,
            "highWordFirst": false,
            "swapCharacterPairs": true,
            "interface": "serial",
            "mode": "RTU",
            "device": "/dev/ttyUSB0",
            "baudRate": "115200",
            "parity": "none",
            "ipAddress": "",
            "timeoutInterval": 2000,
            "startRequestTimerAfterResponse": false,
            "deliverEntireResponse": false,
            "disconnectReportTime": 0,
            "publishDisabled": false,
            "connectionStatus": false
        },
        "schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "type": "object",
            "title": "spark-hpl-modbus",
            "required": [
                "enable",
                "requestFrequency",
                "slaveId",
                "highByteFirst",
                "highWordFirst",
                "interface"
            ],
            "properties": {
                "enable": {
                    "title": "Enable",
                    "description": "Enable/Disable the Modbus Demo Machine.",
                    "type": "boolean"
                },
                "requestFrequency": {
                    "title": "Time between Requests (in seconds)",
                    "description": "The time to wait between each complete set of requests.",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 1200
                },
                "slaveId": {
                    "title": "ID of the slave",
                    "description": "The ID number of the slave device to connect to.",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 247
                },
                "highByteFirst": {
                    "title": "High Byte First",
                    "description": "Expected order of bytes recieved for 16 and 32 bit data.",
                    "type": "boolean"
                },
                "highWordFirst": {
                    "title": "High Word First",
                    "description": "Expected order of words recieved for 32 bit data.",
                    "type": "boolean"
                },
                "swapCharacterPairs": {
                    "title": "Swap String Character Pairs",
                    "description": "In a string, if the first character of a pair is stored in the high byte of a 16-bit register, select this option to swap their order.",
                    "type": "boolean",
                    "default": true
                },
                "interface": {
                    "title": "Interface",
                    "description": "Choose either Serial or Ethernet Interface.",
                    "type": "string",
                    "enum": ["serial", "ethernet"]
                },
                "mode": {
                    "title": "Serial Encoding Scheme",
                    "description": "Choose the Encoding used for the serial interface.",
                    "type": "string",
                    "enum": ["RTU", "ASCII_8BIT", "ASCII_7BIT"]
                },
                "device": {
                    "title": "Serial Device Path",
                    "description": "The serial device the Modbus Demo Machine is connected to.",
                    "type": "string"
                },
                "baudRate": {
                    "title": "Serial Baud Rate",
                    "description": "Choose the Baud Rate for the serial device.",
                    "type": "string",
                    "enum": ["75", "110", "300", "1200", "2400", "4800", "9600", "19200", "38400", "57600", "115200"]
                },
                "parity": {
                    "title": "Serial Parity",
                    "description": "Choose the Parity for the serial device.",
                    "type": "string",
                    "enum": ["none", "even", "mark", "odd", "space"]
                },
                "ipAddress": {
                    "title": "Modbus slave's IP Address",
                    "description": "The IP address of the Modbus slave device.",
                    "type": "string",
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
                    "validationMessage": "Must be a valid IPv4 address"
                },
                "timeoutInterval":{
                    "title": "Response timeout (in milliseconds)",
                    "description":"The maximum time to wait for a modbus response",
                    "type": "integer",
                    "minimum": 10,
                    "maximum": 10000,
                    "validationMessage": "Must be a number between 10 to 10000"
                },
                "startRequestTimerAfterResponse":{
                    "title": "Start request timer after response (or timeout)",
                    "description":"Rather than an absolute request-frequency, only start the request timer when the response (or timeout) is received",
                    "type": "boolean",
                    "default": false
                },
                "deliverEntireResponse": {
                    "title": "Deliver Entire Response",
                    "description": "Set to true to deliver the entire machine response as variable 'CombinedResult'",
                    "type": "boolean",
                    "default": false
                },
                "disconnectReportTime": {
                    "title": "Disconnect Report Time",
                    "description": "Time in seconds machine must be disconnected before any machine connected status variable becomes false",
                    "type": "integer",
                    "minimum": 0,
                    "default": 0,
                    "required": true
                },
                "publishDisabled": {
                    "title": "Output Publish Disabled",
                    "description": "Whether or not this machine will be disabled for 'Publish' based output protocols e.g. AWS IoT",
                    "type": "boolean",
                    "required": true
                },
                "connectionStatus" : {
                  "title": "Connected",
                  "description": "Whether or not the Spark is connected to this machine",
                  "type": "boolean",
                  "readOnly": true
                }
            }
        },
        "form": [
            "enable",
            "requestFrequency",
            "slaveId",
            "highByteFirst",
            "highWordFirst",
            "swapCharacterPairs",
            "interface", {
                "condition": "model.interface=='serial'",
                "key": "mode"
            }, {
                "condition": "model.interface=='serial'",
                "key": "device"
            }, {
                "condition": "model.interface=='serial'",
                "key": "baudRate"
            }, {
                "condition": "model.interface=='serial'",
                "key": "parity"
            }, {
                "condition": "model.interface=='ethernet'",
                "key": "ipAddress",
                "placeholder": "192.168.0.1"
            },
            "timeoutInterval",
            "startRequestTimerAfterResponse",
            "deliverEntireResponse",
            "disconnectReportTime",
            "publishDisabled",
            "connectionStatus"
        ]
    }
}
