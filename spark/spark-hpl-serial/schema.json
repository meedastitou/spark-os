{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "hpl-serial",
    "title": "Serial",
    "headerTemplate": "{{self.info.name}}",
    "type": "object",
    "required": [
        "info",
        "variables"
    ],
    "properties": {
        "info": {
            "$ref": "#/definitions/hpl/definitions/info"
        },
        "variables": {
            "title": "Variables",
            "description": "Array of variables to read from the machine",
            "type": "array",
            "format": "tabs",
            "minItems": 1,
            "items": {
                "headerTemplate": "{{self.name}}",
                "defaultProperties": [
                    "name",
                    "description",
                    "format"
                ],
                "allOf": [{
                    "$ref": "#/definitions/hpl/definitions/variable"
                }, {
                    "properties": {
                        "regex": {
                            "title": "Regular Expression",
                            "description": "In Pub/Sub mode; A regular expression capable of extracting this variable's data from the returned data. Note, if a space char is required at the start or end, encase them in [] otherwise they will be stripped",
                            "type": "string",
                            "minLength": 1
                        },
                        "csvPos": {
                            "title": "CSV Position",
                            "description": "In Pub/Sub mode; This variable's position in the returned comma separated data (may also be separated by a custom separator)",
                            "type": "integer",
                            "minimum": 0
                        },
                        "requestKey": {
                            "title": "Request Key",
                            "description": "In Req/Res mode; The key used to request this variable's data from the server",
                            "type": "string",
                            "minLength": 1
                        },
                        "bitRead": {
                            "title": "Bit Read",
                            "description": "Which bit to read (0-15). If using the V-Link Protocol and accessing a bit from a 16 Word. Format should be set to bool",
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 15
                        },
                        "charOffset": {
                            "title": "Character Offset Position",
                            "description": "In Pub/Sub mode with the testing equipment protocol, this variable's offset position from the start of the message.",
                            "type": "integer",
                            "minimum": 0
                        },
                        "charLength": {
                            "title": "Character Length",
                            "description": "In Pub/Sub mode with the testing equipment protocol, this variable's character length.",
                            "type": "integer",
                            "minimum": 1
                        },
                        "convertNullToZero": {
                            "title": "Convert Null To Zero",
                            "description": "Set whether if no data, it should be converted to a zero.",
                            "type": "boolean",
                            "default": false
                        },
                        "heidenhainKeywordMissingVariableFlag": {
                            "title": "HEIDENHAIN Keyword Missing Variable",
                            "description": "Set to true to use this variable for the received line that simply starts with a + and has a value with no keyword.",
                            "type": "boolean",
                            "default": false
                        },
                        "machineConnected": {
                            "title": "Machine Connected Status",
                            "description": "Set to true if variable is true/false when the machine is connected/disconnected",
                            "type": "boolean",
                            "default": false
                        }
                    }
                }]
            }
        },
        "settings": {
            "title": "Settings",
            "type": "object",
            "properties": {
                "model": {
                    "title": "Model",
                    "type": "object",
                    "defaultProperties" : [
                      "highByteFirst",
                      "highWordFirst",
                      "disconnectReportTime"
                    ],
                    "properties": {
                        "highByteFirst": {
                            "title": "High Byte First",
                            "description": "Expected order of bytes recieved for 16 and 32 bit data.",
                            "type": "boolean",
                            "default": true
                        },
                        "highWordFirst": {
                            "title": "High Word First",
                            "description": "Expected order of words recieved for 32 bit data.",
                            "type": "boolean",
                            "default": true
                        },
                        "disconnectReportTime": {
                            "title": "Disconnect Report Time",
                            "description": "Time in seconds machine must be disconnected before any machine connected status variable becomes false",
                            "type": "integer",
                            "minimum": 0
                        }
                    }
                }
            }
        }
    }
}
